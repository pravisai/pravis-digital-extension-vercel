
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 13%;
    --foreground: 0 0% 95%;
    --card: 0 0% 10%;
    --card-foreground: 0 0% 95%;
    --popover: 0 0% 7%;
    --popover-foreground: 0 0% 95%;
    --primary: 180 100% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 217 91% 60%;
    --secondary-foreground: 0 0% 100%;
    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 63%;
    --accent: 0 0% 15%;
    --accent-foreground: 0 0% 95%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 0 0% 95%;
    --border: 180 100% 25%;
    --input: 180 100% 25%;
    --ring: 180 100% 50%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 13%;
    --foreground: 0 0% 95%;
    --card: 0 0% 10%;
    --card-foreground: 0 0% 95%;
    --popover: 0 0% 7%;
    --popover-foreground: 0 0% 95%;
    --primary: 180 100% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 217 91% 60%;
    --secondary-foreground: 0 0% 100%;
    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 63%;
    --accent: 0 0% 15%;
    --accent-foreground: 0 0% 95%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 0 0% 95%;
    --border: 180 100% 25%;
    --input: 180 100% 25%;
    --ring: 180 100% 50%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    @apply text-[14px];
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
    .hud-container {
        position: relative;
        background-color: #0a0a0a;
        background-image: 
            linear-gradient(hsl(var(--primary) / 0.08) 1px, transparent 1px), 
            linear-gradient(to right, hsl(var(--primary) / 0.08) 1px, transparent 1px);
        background-size: 30px 30px;
        animation: hud-flicker 10s infinite linear;
        overflow: hidden; /* Hide entrance animation overflow */
    }

    .hud-button-wrapper {
        position: relative;
        width: 140px;
        height: 160px;
        margin: 0 auto;
        cursor: pointer;
        /* Premium transition */
        transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
        /* Entrance Animation */
        opacity: 0;
        animation: fade-in-up 0.6s forwards;
        animation-delay: var(--animation-delay, 0s);
    }
    
    .hud-button-wrapper:hover {
        /* Float and scale effect */
        transform: translateY(-8px) scale(1.05);
    }
    .hud-button-wrapper:active {
        /* Tactile press effect */
        transform: translateY(-2px) scale(0.98);
        transition-duration: 0.1s;
    }

    .hud-button {
        position: relative;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
        
        /* Premium background with gradient for depth */
        background-image: linear-gradient(145deg, hsl(var(--primary) / 0.1), hsl(var(--primary) / 0.03));
        backdrop-filter: blur(4px);
        
        transition: background-color 0.4s ease;
        padding: 0.5rem;
        overflow: hidden; /* Important for pseudo-elements */
    }
    
    .hud-button-wrapper:hover .hud-button {
        background-color: hsl(var(--primary) / 0.15);
    }

    /* Combined pseudo-element for glow and border */
    .hud-button::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
        pointer-events: none;
        
        /* Multi-layered shadow for premium glow */
        box-shadow: 0 0 6px hsl(var(--primary)/0.6), 0 0 12px hsl(var(--primary)/0.4), inset 0 0 4px hsl(var(--primary) / 0.3), inset 0 0 0 1px hsl(var(--primary) / 0.5);
        
        /* Breathing animation */
        animation: premium-pulse 5s infinite ease-in-out;
        transition: box-shadow 0.4s cubic-bezier(0.2, 0.8, 0.2, 1), opacity 0.4s ease;
        opacity: 0.8;
    }

    .hud-button-wrapper:hover .hud-button::before {
       /* Enhanced glow on hover */
       box-shadow: 0 0 12px hsl(var(--primary)), 0 0 24px hsl(var(--primary)), inset 0 0 8px hsl(var(--primary) / 0.6), inset 0 0 0 1.5px hsl(var(--primary));
       opacity: 1;
    }

    /* Scanline effect */
    .hud-button::after {
        content: '';
        position: absolute;
        width: 150%; /* Wider to create an angled line */
        height: 100%;
        top: 0;
        left: -25%;
        pointer-events: none;
        background: linear-gradient(to top, transparent, hsl(var(--primary) / 0.2), transparent);
        animation: hud-scanline 3.5s linear infinite;
        animation-delay: inherit; /* Use the delay from the wrapper */
    }

    /* Icon styling */
    .hud-button > svg {
        transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1), filter 0.4s ease;
        filter: drop-shadow(0 0 3px hsl(var(--primary) / 0.5));
    }

    .hud-button-wrapper:hover .hud-button > svg {
        transform: scale(1.1);
        filter: drop-shadow(0 0 6px hsl(var(--primary)));
    }

    /* Text styling */
    .hud-button > span {
        letter-spacing: 0.05em;
        text-shadow: 0 0 5px hsl(var(--primary) / 0.7);
        transition: text-shadow 0.4s ease, color 0.4s ease;
    }


    @media (max-width: 768px) {
      .hud-button-wrapper {
        width: 120px;
        height: 140px;
      }
    }
}


@keyframes premium-pulse {
    0%, 100% {
        box-shadow: 0 0 6px hsl(var(--primary)/0.6), 0 0 12px hsl(var(--primary)/0.4), inset 0 0 4px hsl(var(--primary) / 0.3), inset 0 0 0 1px hsl(var(--primary) / 0.5);
        opacity: 0.8;
    }
    50% {
        box-shadow: 0 0 10px hsl(var(--primary)/0.8), 0 0 20px hsl(var(--primary)/0.6), inset 0 0 6px hsl(var(--primary) / 0.5), inset 0 0 0 1.5px hsl(var(--primary));
        opacity: 1;
    }
}

@keyframes hud-scanline {
    0% {
        transform: translateY(-100%) rotate(-20deg);
    }
    100% {
        transform: translateY(100%) rotate(-20deg);
    }
}

@keyframes hud-flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.98; }
}

@keyframes fade-in-up {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
